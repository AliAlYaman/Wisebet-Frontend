name: Wisebet CI/CD Pipeline

on: 
  push:
    branches: [main, dev]  
  pull_request:
    branches: [main]

permissions:
  contents: write

jobs: 
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.set-cache.outputs.cache-key }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Generate cache key
        id: set-cache
        run: echo "cache-key=$(date +%Y%m%d)" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'  # LTS recommended
          cache: 'npm'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm ci  # Clean install for reproducibility

      - name: Build production
        run: npm run build

      - name: Verify dist folder
        run: ls -la dist
        
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: production-build
          path: dist/
          retention-days: 1

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --watchAll=false --coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage
          retention-days: 1

      - name: Cleanup old artifacts
        if: always()
        run: rm -rf coverage

  release:
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: List available artifacts (Debugging)
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Show artifacts
        run: ls -la ./artifacts

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: production-build
          path: ./dist

      - name: Verify dist exists
        run: ls -la ./dist

      - name: Zip dist
        run: zip -r dist.zip dist

      - name: Bump version
        id: version
        uses: phips28/gh-action-bump-version@master
        with:
          tag-prefix: 'v'
          major-wording: 'MAJOR'
          minor-wording: 'minor'
          patch-wording: 'patch,fixes'
          commit-message: 'chore: release {{version}} [skip ci]'

      - name: Create Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build.zip
          tag_name: ${{ steps.version.outputs.newTag }}
          name: ${{ steps.version.outputs.newTag }}
          body: |
            Production Release ${{ steps.version.outputs.newTag }}
            Changelog:
            - Built with Node 20
            - Vite production build
          draft: false
          prerelease: false
          make_latest: true
